tests = {'mean_test_scores':[0.774,0.51,0.51,0.51,0.774,0.51,0.51,0.51,0.774,0.51,0.51,0.51,0.774,0.51,0.73733333,0.51,0.774,0.51,0.86733333,0.51,0.774,0.51,0.86733333,0.51,0.81133333,0.51,0.51,0.51,0.81133333,0.51,0.51,0.51,0.81133333,0.51066667,0.51,0.51,0.81133333,0.76133333,0.81,0.51066667,0.81133333,0.51,0.86733333,0.51,0.81133333,0.51,0.86733333,0.51,0.77866667,0.51,0.51,0.51,0.77866667,0.51133333,0.51,0.51,0.77866667,0.75066667,0.55066667,0.736,0.77866667,0.86933333,0.87466667,0.33666667,0.77866667,0.88333333,0.86733333,0.51,0.77866667,0.51,0.86733333,0.51,0.738,0.51133333,0.51,0.51,0.738,0.74866667,0.51,0.73666667,0.738,0.828,0.73733333,0.768,0.738,0.894,0.86733333,0.68733333,0.738,0.88533333,0.86733333,0.51,0.738,0.51,0.86733333,0.51,0.73,0.74733333,0.51,0.73666667,0.73,0.796,0.51,0.774,0.73,0.85666667,0.81,0.78733333,0.73,0.896,0.86733333,0.68133333,0.73,0.88533333,0.86733333,0.51,0.73,0.51,0.86733333,0.51],
'mean_train_scores': [0.81783333,0.51,0.51,0.51,0.81783333,0.51,0.51,0.51,0.81783333,0.51,0.51,0.51,0.81783333,0.51,0.75516667,0.51,0.81783333,0.51,1.,0.51,0.81783333,0.51,1.,0.51,0.88266667,0.51,0.51,0.51,0.88266667,0.51,0.51,0.51,0.88266667,0.511,0.51,0.51,0.88266667,0.78433333,0.855,0.51083333,0.88266667,0.51,1.,0.51,0.88266667,0.51,1.,0.51,0.95,0.51,0.51,0.51,0.95,0.51366667,0.51,0.51,0.95,0.778,0.55816667,0.74866667,0.95,0.9195,0.973,0.33816667,0.95,1.,1.,0.51,0.95,1.,1.,0.51,0.99916667,0.514,0.51,0.51,0.99916667,0.7705,0.51,0.75033333,0.99916667,0.8705,0.75516667,0.811,0.99916667,0.99966667,1.,0.694,0.99916667,1.,1.,0.51,0.99916667,1.,1.,0.51,1.,0.76966667,0.51,0.7505,1.,0.84416667,0.51,0.8175,1.,0.9615,0.855,0.85483333,1.,1.,1.,0.693,1.,1.,1.,0.51,1.,1.,1.,0.51],
'params': [{'C': 0.01, 'gamma': 1e-05, 'kernel': 'linear'}, {'C': 0.01, 'gamma': 1e-05, 'kernel': 'rbf'}, {'C': 0.01, 'gamma': 1e-05, 'kernel': 'poly'}, {'C': 0.01, 'gamma': 1e-05, 'kernel': 'sigmoid'}, {'C': 0.01, 'gamma': 0.0001, 'kernel': 'linear'}, {'C': 0.01, 'gamma': 0.0001, 'kernel': 'rbf'}, {'C': 0.01, 'gamma': 0.0001, 'kernel': 'poly'}, {'C': 0.01, 'gamma': 0.0001, 'kernel': 'sigmoid'}, {'C': 0.01, 'gamma': 0.001, 'kernel': 'linear'}, {'C': 0.01, 'gamma': 0.001, 'kernel': 'rbf'}, {'C': 0.01, 'gamma': 0.001, 'kernel': 'poly'}, {'C': 0.01, 'gamma': 0.001, 'kernel': 'sigmoid'}, {'C': 0.01, 'gamma': 0.01, 'kernel': 'linear'}, {'C': 0.01, 'gamma': 0.01, 'kernel': 'rbf'}, {'C': 0.01, 'gamma': 0.01, 'kernel': 'poly'}, {'C': 0.01, 'gamma': 0.01, 'kernel': 'sigmoid'}, {'C': 0.01, 'gamma': 0.1, 'kernel': 'linear'}, {'C': 0.01, 'gamma': 0.1, 'kernel': 'rbf'}, {'C': 0.01, 'gamma': 0.1, 'kernel': 'poly'}, {'C': 0.01, 'gamma': 0.1, 'kernel': 'sigmoid'}, {'C': 0.01, 'gamma': 1, 'kernel': 'linear'}, {'C': 0.01, 'gamma': 1, 'kernel': 'rbf'}, {'C': 0.01, 'gamma': 1, 'kernel': 'poly'}, {'C': 0.01, 'gamma': 1, 'kernel': 'sigmoid'}, {'C': 0.1, 'gamma': 1e-05, 'kernel': 'linear'}, {'C': 0.1, 'gamma': 1e-05, 'kernel': 'rbf'}, {'C': 0.1, 'gamma': 1e-05, 'kernel': 'poly'}, {'C': 0.1, 'gamma': 1e-05, 'kernel': 'sigmoid'}, {'C': 0.1, 'gamma': 0.0001, 'kernel': 'linear'}, {'C': 0.1, 'gamma': 0.0001, 'kernel': 'rbf'}, {'C': 0.1, 'gamma': 0.0001, 'kernel': 'poly'}, {'C': 0.1, 'gamma': 0.0001, 'kernel': 'sigmoid'}, {'C': 0.1, 'gamma': 0.001, 'kernel': 'linear'}, {'C': 0.1, 'gamma': 0.001, 'kernel': 'rbf'}, {'C': 0.1, 'gamma': 0.001, 'kernel': 'poly'}, {'C': 0.1, 'gamma': 0.001, 'kernel': 'sigmoid'}, {'C': 0.1, 'gamma': 0.01, 'kernel': 'linear'}, {'C': 0.1, 'gamma': 0.01, 'kernel': 'rbf'}, {'C': 0.1, 'gamma': 0.01, 'kernel': 'poly'}, {'C': 0.1, 'gamma': 0.01, 'kernel': 'sigmoid'}, {'C': 0.1, 'gamma': 0.1, 'kernel': 'linear'}, {'C': 0.1, 'gamma': 0.1, 'kernel': 'rbf'}, {'C': 0.1, 'gamma': 0.1, 'kernel': 'poly'}, {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}, {'C': 0.1, 'gamma': 1, 'kernel': 'linear'}, {'C': 0.1, 'gamma': 1, 'kernel': 'rbf'}, {'C': 0.1, 'gamma': 1, 'kernel': 'poly'}, {'C': 0.1, 'gamma': 1, 'kernel': 'sigmoid'}, {'C': 1, 'gamma': 1e-05, 'kernel': 'linear'}, {'C': 1, 'gamma': 1e-05, 'kernel': 'rbf'}, {'C': 1, 'gamma': 1e-05, 'kernel': 'poly'}, {'C': 1, 'gamma': 1e-05, 'kernel': 'sigmoid'}, {'C': 1, 'gamma': 0.0001, 'kernel': 'linear'}, {'C': 1, 'gamma': 0.0001, 'kernel': 'rbf'}, {'C': 1, 'gamma': 0.0001, 'kernel': 'poly'}, {'C': 1, 'gamma': 0.0001, 'kernel': 'sigmoid'}, {'C': 1, 'gamma': 0.001, 'kernel': 'linear'}, {'C': 1, 'gamma': 0.001, 'kernel': 'rbf'}, {'C': 1, 'gamma': 0.001, 'kernel': 'poly'}, {'C': 1, 'gamma': 0.001, 'kernel': 'sigmoid'}, {'C': 1, 'gamma': 0.01, 'kernel': 'linear'}, {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}, {'C': 1, 'gamma': 0.01, 'kernel': 'poly'}, {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}, {'C': 1, 'gamma': 0.1, 'kernel': 'linear'}, {'C': 1, 'gamma': 0.1, 'kernel': 'rbf'}, {'C': 1, 'gamma': 0.1, 'kernel': 'poly'}, {'C': 1, 'gamma': 0.1, 'kernel': 'sigmoid'}, {'C': 1, 'gamma': 1, 'kernel': 'linear'}, {'C': 1, 'gamma': 1, 'kernel': 'rbf'}, {'C': 1, 'gamma': 1, 'kernel': 'poly'}, {'C': 1, 'gamma': 1, 'kernel': 'sigmoid'}, {'C': 10, 'gamma': 1e-05, 'kernel': 'linear'}, {'C': 10, 'gamma': 1e-05, 'kernel': 'rbf'}, {'C': 10, 'gamma': 1e-05, 'kernel': 'poly'}, {'C': 10, 'gamma': 1e-05, 'kernel': 'sigmoid'}, {'C': 10, 'gamma': 0.0001, 'kernel': 'linear'}, {'C': 10, 'gamma': 0.0001, 'kernel': 'rbf'}, {'C': 10, 'gamma': 0.0001, 'kernel': 'poly'}, {'C': 10, 'gamma': 0.0001, 'kernel': 'sigmoid'}, {'C': 10, 'gamma': 0.001, 'kernel': 'linear'}, {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}, {'C': 10, 'gamma': 0.001, 'kernel': 'poly'}, {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}, {'C': 10, 'gamma': 0.01, 'kernel': 'linear'}, {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}, {'C': 10, 'gamma': 0.01, 'kernel': 'poly'}, {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}, {'C': 10, 'gamma': 0.1, 'kernel': 'linear'}, {'C': 10, 'gamma': 0.1, 'kernel': 'rbf'}, {'C': 10, 'gamma': 0.1, 'kernel': 'poly'}, {'C': 10, 'gamma': 0.1, 'kernel': 'sigmoid'}, {'C': 10, 'gamma': 1, 'kernel': 'linear'}, {'C': 10, 'gamma': 1, 'kernel': 'rbf'}, {'C': 10, 'gamma': 1, 'kernel': 'poly'}, {'C': 10, 'gamma': 1, 'kernel': 'sigmoid'}, {'C': 100, 'gamma': 1e-05, 'kernel': 'linear'}, {'C': 100, 'gamma': 1e-05, 'kernel': 'rbf'}, {'C': 100, 'gamma': 1e-05, 'kernel': 'poly'}, {'C': 100, 'gamma': 1e-05, 'kernel': 'sigmoid'}, {'C': 100, 'gamma': 0.0001, 'kernel': 'linear'}, {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}, {'C': 100, 'gamma': 0.0001, 'kernel': 'poly'}, {'C': 100, 'gamma': 0.0001, 'kernel': 'sigmoid'}, {'C': 100, 'gamma': 0.001, 'kernel': 'linear'}, {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}, {'C': 100, 'gamma': 0.001, 'kernel': 'poly'}, {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}, {'C': 100, 'gamma': 0.01, 'kernel': 'linear'}, {'C': 100, 'gamma': 0.01, 'kernel': 'rbf'}, {'C': 100, 'gamma': 0.01, 'kernel': 'poly'}, {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}, {'C': 100, 'gamma': 0.1, 'kernel': 'linear'}, {'C': 100, 'gamma': 0.1, 'kernel': 'rbf'}, {'C': 100, 'gamma': 0.1, 'kernel': 'poly'}, {'C': 100, 'gamma': 0.1, 'kernel': 'sigmoid'}, {'C': 100, 'gamma': 1, 'kernel': 'linear'}, {'C': 100, 'gamma': 1, 'kernel': 'rbf'}, {'C': 100, 'gamma': 1, 'kernel': 'poly'}, {'C': 100, 'gamma': 1, 'kernel': 'sigmoid'}]}


print("linear")
for i in range(120):
    if tests['params'][i]['kernel'] == 'linear':
        print(str(tests['params'][i]) + " - " + str(tests['mean_test_scores'][i]))
print("------------------")
print("rbf")
for i in range(120):
    if tests['params'][i]['kernel'] == 'rbf':
        print(str(tests['params'][i]) + " - " + str(tests['mean_test_scores'][i]))
print("------------------")
print("poly")
for i in range(120):
    if tests['params'][i]['kernel'] == 'poly':
        print(str(tests['params'][i]) + " - " + str(tests['mean_test_scores'][i]))
print("------------------")
print("sigmoid")
for i in range(120):
    if tests['params'][i]['kernel'] == 'sigmoid':
        print(str(tests['params'][i]) + " - " + str(tests['mean_test_scores'][i]))